# Staging configuration for PurpleTab
# Assumes external reverse proxy (e.g., Caddy, Nginx, Traefik) handles:
# - SSL/TLS termination
# - Routing purpletab.honker subdomain to web container
# - Load balancing if needed
#
# External proxy should route:
#   purpletab.honker -> localhost:3001 (Web UI)
#
# The web container's nginx then proxies /api/* to the controller service internally

services:
  controller:
    image: ghcr.io/zombar/purpletab-controller:staging
    environment:
      # Service URLs (internal Docker network)
      - SCRAPER_BASE_URL=http://scraper:8080
      - TEXTANALYZER_BASE_URL=http://textanalyzer:8080
      - SCHEDULER_BASE_URL=http://scheduler:8080

      # External URLs
      - WEB_INTERFACE_URL=https://purpletab.honker
      - PUBLIC_URL_BASE=https://purpletab.honker

      # Database
      - DATABASE_PATH=/app/data/controller.db

      # Disable mock data in staging
      - GENERATE_MOCK_DATA=false

      # CORS disabled (same-origin requests via nginx proxy)
      - CORS_ORIGINS=

      # Port
      - CONTROLLER_PORT=8080
    ports:
      - "9080:8080"  # Expose for external reverse proxy
    volumes:
      - controller-data:/app/data
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - purpletab-network
      - proxy

  scraper:
    image: ghcr.io/zombar/purpletab-scraper:staging
    environment:
      # Ollama configuration
      - USE_OLLAMA=true
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=gemma3:12b

      # Database & storage
      - DATABASE_PATH=/app/data/scraper.db
      - STORAGE_PATH=/app/storage

      # Port
      - SCRAPER_PORT=8080
    ports:
      - "9081:8080"  # Optional: expose if you need direct access for debugging
    volumes:
      - scraper-data:/app/data
      - scraper-storage:/app/storage
    restart: unless-stopped
    networks:
      - purpletab-network
      - proxy

  textanalyzer:
    image: ghcr.io/zombar/purpletab-textanalyzer:staging
    environment:
      # Ollama configuration
      - USE_OLLAMA=true
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=gemma3:12b

      # Database
      - DATABASE_PATH=/data/textanalyzer.db

      # Port
      - TEXTANALYZER_PORT=8080
    ports:
      - "9082:8080"  # Optional: expose if you need direct access for debugging
    volumes:
      - textanalyzer-data:/data
    restart: unless-stopped
    networks:
      - purpletab-network
      - proxy

  scheduler:
    image: ghcr.io/zombar/purpletab-scheduler:staging
    environment:
      # Controller URL (internal)
      - CONTROLLER_BASE_URL=http://controller:8080

      # Database
      - DATABASE_PATH=/app/data/scheduler.db

      # Port
      - SCHEDULER_PORT=8080

      # Scheduling configuration
      - ENABLE_SCHEDULER=true
      - DEFAULT_SCHEDULE=0 */6 * * *  # Every 6 hours for staging
    ports:
      - "9083:8080"  # Optional: expose if you need direct access for debugging
    volumes:
      - scheduler-data:/app/data
    restart: unless-stopped
    networks:
      - purpletab-network

  web:
    image: ghcr.io/zombar/purpletab-web:staging
    environment:
      # Runtime nginx config (if needed)
      - NGINX_PORT=80
    ports:
      - "3001:80"  # Expose for external reverse proxy
    restart: unless-stopped
    depends_on:
      controller:
        condition: service_healthy
    networks:
      - purpletab-network
      - proxy

# Use the same networks and volumes from base docker-compose.yml
networks:
  purpletab-network:
    driver: bridge
  proxy:
    external: true

# Volumes are inherited from docker-compose.yml - no need to redefine
