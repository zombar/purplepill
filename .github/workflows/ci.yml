name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  # Detect which apps have changed
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      controller: ${{ steps.filter.outputs.controller }}
      scraper: ${{ steps.filter.outputs.scraper }}
      textanalyzer: ${{ steps.filter.outputs.textanalyzer }}
      web: ${{ steps.filter.outputs.web }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            controller:
              - 'apps/controller/**'
            scraper:
              - 'apps/scraper/**'
            textanalyzer:
              - 'apps/textanalyzer/**'
            web:
              - 'apps/web/**'

  # Test Go controller app
  test-controller:
    needs: detect-changes
    if: needs.detect-changes.outputs.controller == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/controller
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: apps/controller/go.sum

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: make test

  # Test Go scraper app
  test-scraper:
    needs: detect-changes
    if: needs.detect-changes.outputs.scraper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/scraper
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: apps/scraper/go.sum

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: make test

  # Test Go textanalyzer app
  test-textanalyzer:
    needs: detect-changes
    if: needs.detect-changes.outputs.textanalyzer == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/textanalyzer
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: apps/textanalyzer/go.sum

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: make test

  # Test JavaScript/React web app
  test-web:
    needs: detect-changes
    if: needs.detect-changes.outputs.web == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/web
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  # Summary job that requires all tests to pass
  ci-success:
    runs-on: ubuntu-latest
    needs: [test-controller, test-scraper, test-textanalyzer, test-web]
    if: always()
    steps:
      - name: Check all tests passed
        run: |
          if [ "${{ contains(needs.*.result, 'failure') }}" == "true" ]; then
            echo "One or more test jobs failed"
            exit 1
          fi
          if [ "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]; then
            echo "One or more test jobs were cancelled"
            exit 1
          fi
          echo "All tests passed!"
