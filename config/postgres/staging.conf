# PostgreSQL Configuration for Staging (1GB RAM)
# Optimized for staging environment with comprehensive logging

# Memory Configuration (1GB total)
shared_buffers = 256MB
effective_cache_size = 768MB
maintenance_work_mem = 64MB
work_mem = 8MB

# Connection Settings
max_connections = 100
superuser_reserved_connections = 3

# WAL Settings
wal_buffers = 8MB
checkpoint_completion_target = 0.9
max_wal_size = 2GB
min_wal_size = 512MB

# Query Planner
random_page_cost = 1.1  # Optimized for SSD
effective_io_concurrency = 200
default_statistics_target = 100

# STRUCTURED LOGGING CONFIGURATION
# Use stderr for Docker - logs will be collected by Docker/Promtail
logging_collector = off
log_destination = 'stderr'
# Commented out file-based logging (causes permission issues in Docker)
# log_directory = '/var/log/postgresql'
# log_filename = 'postgresql-%Y-%m-%d.json'
# log_rotation_age = 1d
# log_rotation_size = 500MB
# log_truncate_on_rotation = on
# log_file_mode = 0644

# Log Content (More verbose for staging)
log_min_duration_statement = 500  # Log queries > 500ms
log_checkpoints = on
log_connections = on
log_disconnections = on
log_duration = on
log_lock_waits = on
log_statement = 'mod'  # Log all data modifications
log_temp_files = 0
log_autovacuum_min_duration = 0  # Log all autovacuum activity

# Error Reporting
log_error_verbosity = default
log_min_error_statement = error
log_min_messages = warning

# Additional Context
log_timezone = 'UTC'
timezone = 'UTC'
datestyle = 'iso, mdy'
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'
default_text_search_config = 'pg_catalog.english'

# Performance Monitoring
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.max = 10000
pg_stat_statements.track = all
pg_stat_statements.save = on

# Performance Tuning (Staging-specific)
synchronous_commit = off  # Faster writes, acceptable risk for staging
wal_compression = on
wal_writer_delay = 200ms
